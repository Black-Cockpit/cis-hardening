# 2.3 Configure Service Clients
- name: 2.3 Configure Service Clients
  block:
  # 2.3.1 Ensure ftp client is not installed
  #
  # FTP (File Transfer Protocol) is a traditional and widely used standard tool for
  # transferring files between a server and clients over a network, especially where no
  # authentication is necessary (permits anonymous users to connect to a server).
  - name: "2.3.1 Ensure ftp client is not installed"
    block:
    # 2.3.1 Ensure ftp client is not installed | Audit
    - name: 2.3.1 Ensure ftp client is not installed | Audit
      shell:
        cmd: rpm -qa | grep -qE "^ftp" && echo installed || echo not_installed
      changed_when: false
      register: ftp_status_check

    # Extract audit result
    - set_fact:
        ftp_server_check:
          name: 2.3.1 Ensure ftp client is not installed
          scored: true
          automated: true
          remediation_status: "{{ true if ftp_status_check.stdout == 'not_installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [ftp_server_check] }}"
      changed_when: false

    # 2.3.1 Ensure ftp client is not installed | Remediation
    - name: 2.3.1 Ensure ftp client is not installed | Remediation
      package:
        name: ftp
        state: absent
      when: not audit_only and not ftp_server_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 2.3.2 Ensure ldap client is not installed
  #
  # The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
  # NIS/YP. It is a service that provides a method for looking up information from a central
  # database.
  - name: "2.3.2 Ensure ldap client is not installed"
    block:
    # 2.3.2 Ensure ldap client is not installed | Audit
    - name: 2.3.2 Ensure ldap client is not installed | Audit
      shell:
        cmd: rpm -qa | grep -q openldap-clients && echo installed || echo not_installed
      changed_when: false
      register: openldap_clients_status_check

    # Extract audit result
    - set_fact:
        openldap_clients_server_check:
          name: 2.3.2 Ensure ldap client is not installed
          scored: true
          automated: true
          remediation_status: "{{ true if openldap_clients_status_check.stdout == 'not_installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [openldap_clients_server_check] }}"
      changed_when: false

    # 2.3.2 Ensure ldap client is not installed | Remediation
    - name: 2.3.2 Ensure ldap client is not installed | Remediation
      package:
        name: openldap-clients
        state: absent
      when: not audit_only and not openldap_clients_server_check.remediation_status
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"

  

  # 2.3.3 Ensure nis client is not installed
  #
  # The Network Information Service (NIS), formerly known as Yellow Pages, is a client-
  # server directory service protocol used to distribute system configuration files. The NIS
  # client ( ypbind ) was used to bind a machine to an NIS server and receive the
  # distributed configuration files.
  - name: "2.3.3 Ensure nis client is not installed"
    block:
    # 2.3.3 Ensure nis client is not installed | Audit
    - name: 2.3.3 Ensure nis client is not installed | Audit
      shell:
        cmd: rpm -qa | grep -qE "^ypbind" && echo installed || echo not_installed
      changed_when: false
      register: ypbind_status_check

    # Extract audit result
    - set_fact:
        ypbind_server_check:
          name: 2.3.3 Ensure nis client is not installed
          scored: true
          automated: true
          remediation_status: "{{ true if ypbind_status_check.stdout == 'not_installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [ypbind_server_check] }}"
      changed_when: false

    # 2.3.3 Ensure nis client is not installed | Remediation
    - name: 2.3.3 Ensure nis client is not installed | Remediation
      package:
        name: ypbind
        state: absent
      when: not audit_only and not ypbind_server_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 2.3.4 Ensure telnet client is not installed
  #
  # The telnet-server package contains the telnet daemon, which accepts connections
  # from users from other systems via the telnet protocol.
  - name: "2.3.4 Ensure telnet client is not installed"
    block:
    # 2.3.4 Ensure telnet client is not installed | Audit
    - name: 2.3.4 Ensure telnet client is not installed | Audit
      shell:
        cmd: rpm -qa | grep -qE "^telnet" && echo installed || echo not_installed
      changed_when: false
      register: telnet_status_check

    # Extract audit result
    - set_fact:
        telnet_server_check:
          name: 2.3.4 Ensure telnet client is not installed
          scored: true
          automated: true
          remediation_status: "{{ true if telnet_status_check.stdout == 'not_installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [telnet_server_check] }}"
      changed_when: false

    # 2.3.4 Ensure telnet client is not installed | Remediation
    - name: 2.3.4 Ensure telnet client is not installed | Remediation
      package:
        name: telnet
        state: absent
      when: not audit_only and not telnet_server_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 2.3.5 Ensure tftp client is not installed
  #
  # Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between
  # two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending
  # and receiving files.
  - name: "2.3.5 Ensure tftp client is not installed"
    block:
    # 2.3.5 Ensure tftp client is not installed | Audit
    - name: 2.3.5 Ensure tftp client is not installed | Audit
      shell:
        cmd: rpm -qa | grep -qE "^tftp" && echo installed || echo not_installed
      changed_when: false
      register: tftp_status_check

    # Extract audit result
    - set_fact:
        tftp_server_check:
          name: 2.3.5 Ensure tftp client is not installed
          scored: true
          automated: true
          remediation_status: "{{ true if tftp_status_check.stdout == 'not_installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [tftp_server_check] }}"
      changed_when: false

    # 2.3.5 Ensure tftp client is not installed | Remediation
    - name: 2.3.5 Ensure tftp client is not installed | Remediation
      package:
        name: tftp
        state: absent
      when: not audit_only and not tftp_server_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"