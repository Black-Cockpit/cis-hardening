# 2.1 Configure Time Synchronization
- name: 2.1 Configure Time Synchronization
  block:
  # 2.1.1 Ensure time synchronization is in use
  #
  # System time should be synchronized between all systems in an environment. This is
  # typically done by establishing an authoritative time server or set of servers and having
  # all systems synchronize their clocks to them.
  - name: "2.1.1 Ensure time synchronization is in use"
    block:
    # 2.1.1 Ensure time synchronization is in use | Audit
    - name: 2.1.1 Ensure time synchronization is in use | Audit
      shell:
        cmd: rpm -qa | grep -q chrony && echo installed || echo not_installed
      changed_when: false
      register: chrony_status_check

    # Extract audit result
    - set_fact:
        chrony_check:
          name: 2.1.1 Ensure time synchronization is in use
          scored: true
          automated: true
          remediation_status: "{{ true if chrony_status_check.stdout == 'installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [chrony_check] }}"
      changed_when: false

    # 2.1.1 Ensure time synchronization is in use | Remediation
    - name: 2.1.1 Ensure time synchronization is in use | Remediation
      package:
        name: gdm
        state: present
      when: not audit_only and not chrony_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 2.1.2 Ensure chrony is configured
  #
  # chrony is a daemon which implements the Network Time Protocol (NTP) and is
  # designed to synchronize system clocks across a variety of systems and use a source
  # that is highly accurate. More information on chrony can be found at
  # http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.
  - name: "2.1.2 Ensure chrony is configured"
    block:
    # 2.1.2 Ensure chrony is configured | Audit
    - name: 2.1.2 Ensure chrony is configured | Audit
      shell:
        cmd: grep -Prsq -- '^\h*(server|pool)\h+[^#\n\r]+' /etc/chrony.conf /etc/chrony.d/ && echo configured || echo not_configured
      changed_when: false
      register: chrony_configuration_status_check

    # Extract audit result
    - set_fact:
        chrony_configuration_check:
          name: 2.1.2 Ensure chrony is configured
          scored: true
          automated: true
          remediation_status: "{{ true if chrony_configuration_status_check.stdout == 'configured' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [chrony_configuration_check] }}"
      changed_when: false

    # 2.1.2 Ensure chrony is configured | Remediation
    - name: 2.1.2 Ensure chrony is configured | Remediation
      blockinfile:
        dest: /etc/chrony.conf
        mode: "0644"
        owner: root
        group: root
        state: present
        block: |

          # See www.pool.ntp.org for an explanation of these servers.  Please
          # consider joining the project if possible.  If you can't or don't want to
          # use these servers I suggest that you try your ISP's nameservers.  We mark
          # the servers 'offline' so that chronyd won't try to connect when the link
          # is down.  Scripts in /etc/ppp/ip-up.d and /etc/ppp/ip-down.d use chronyc
          # commands to switch it on when a dialup link comes up and off when it goes
          # down.  Code in /etc/init.d/chrony attempts to determine whether or not
          # the link is up at boot time and set the online status accordingly.  If
          # you have an always-on connection such as cable omit the 'offline'
          # directive and chronyd will default to online.
          #
          # Note that if Chrony tries to go "online" and dns lookup of the servers
          # fails they will be discarded.  Thus under some circumstances it is
          # better to use IP numbers than host names.

          {% for server in (time_synchronization_servers | default(cis_defaults.time_synchronization_servers)) -%}
          server {{ server }} iburst {{ chrony_server_options | default(cis_defaults.chrony_server_options) }}
          {% endfor %}
      when: not audit_only and not chrony_configuration_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 2.1.3 Ensure chrony is not run as the root user
  #
  # The file /etc/sysconfig/chronyd allows configuration of options for chrony to include
  # the user chrony is run as. By default this is set to the user chrony
  - name: "2.1.3 Ensure chrony is not run as the root user"
    block:
    # 2.1.3 Ensure chrony is not run as the root user | Audit
    - name: 2.1.3 Ensure chrony is not run as the root user | Audit
      shell:
        cmd: grep -Psi -- '^\h*OPTIONS=\"?\h+-u\h+root\b' /etc/sysconfig/chronyd && echo not_configured || echo configured
      changed_when: false
      register: chrony_root_status_check

    # Extract audit result
    - set_fact:
        chrony_root_check:
          name: 2.1.3 Ensure chrony is not run as the root user
          scored: true
          automated: true
          remediation_status: "{{ true if chrony_root_status_check.stdout == 'configured' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [chrony_root_check] }}"
      changed_when: false

    # 2.1.3 Ensure chrony is not run as the root user | Remediation
    - name: 2.1.3 Ensure chrony is not run as the root user | Remediation
      lineinfile:
        path: /etc/sysconfig/chronyd
        regexp: "^(#)?OPTIONS"
        line: "OPTIONS=\"-u chrony\""
        create: true
        mode: "0644"
      when: not audit_only and not chrony_root_check.remediation_status

    # 2.1.3 Ensure chrony is not run as the root user | Remediation
    - name: 2.1.3 Ensure chrony is not run as the root user | Remediation
      systemd:
        name: chronyd
        state: restarted
        force: yes
      when: not audit_only and not chrony_root_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"
