# 5.3 Configure Integrity Checking
- name: 5.3 Configure Integrity Checking
  block:
  # 5.3.1 Ensure AIDE is installed
  #
  # Advanced Intrusion Detection Environment (AIDE) is an intrusion detection tool that
  # uses predefined rules to check the integrity of files and directories in the Linux operating
  # system. AIDE has its own database to check the integrity of files and directories.
  #
  # aide takes a snapshot of files and directories including modification times, permissions,
  # and file hashes which can then be used to compare against the current state of the
  # filesystem to detect modifications to the system.
  - name: "5.3.1 Ensure AIDE is installed"
    block:
    # 5.3.1 Ensure AIDE is installed | Audit
    - name: 5.3.1 Ensure AIDE is installed | Audit
      shell:
        cmd: rpm -q aide | grep -Eq 'aide[\-][0-9]' && echo 'installed' || echo 'not_installed'
      changed_when: false
      register: aide_status_check

    # Extract audit result
    - set_fact:
        aide_check:
          name: 5.3.1 Ensure AIDE is installed
          scored: true
          automated: true
          remediation_status: "{{ true if aide_status_check.stdout == 'installed' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [aide_check] }}"
      changed_when: false

    # 5.3.1 Ensure AIDE is installed | Remediation
    - name: 5.3.1 Ensure AIDE is installed | Remediation
      package:
        name: aide
        state: present
      when: not audit_only and not aide_check.remediation_status
    
     # 5.3.1 Ensure AIDE is installed | Remediation
    - name: 5.3.1 Ensure AIDE is installed | Remediation
      shell:
        cmd: aide --init && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
      when: not audit_only and not aide_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 5.3.2 Ensure filesystem integrity is regularly checked
  #
  # Periodic checking of the filesystem integrity is needed to detect changes to the
  # filesystem.
  - name: "5.3.2 Ensure filesystem integrity is regularly checked"
    block:
    # 5.3.2 Ensure filesystem integrity is regularly checked | Audit
    - name: 5.3.2 Ensure filesystem integrity is regularly checked | Audit
      systemd:
        name: aidecheck.service
      changed_when: false
      register: aidecheck_service_check

    # Define remediation status
    - set_fact:
        remediation_status: "{{ true if (aidecheck_service_check.status.UnitFileState is defined and aidecheck_service_check.status.UnitFileState == 'enabled') else false}}"
      changed_when: false

    # 5.3.2 Ensure filesystem integrity is regularly checked | Audit
    - name: 5.3.2 Ensure filesystem integrity is regularly checked | Audit
      systemd:
        name: aidecheck.timer
      changed_when: false
      register: aidecheck_timer_service_check

    # Define remediation status
    - set_fact:
        remediation_status: "{{ true if (remediation_status and aidecheck_timer_service_check.status.ActiveState == 'active' and aidecheck_timer_service_check.status.UnitFileState == 'enabled') else false}}"
      changed_when: false

    # Extract audit result
    - set_fact:
        aidecheck_service_check:
          name: 5.3.2 Ensure filesystem integrity is regularly checked
          scored: true
          automated: true
          remediation_status: "{{ true if remediation_status else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [aidecheck_service_check] }}"
      changed_when: false

    # 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
    - name: 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "0644"
        force: true
      loop:
      - src: "rhel/lib/systemd/system/aidecheck.service.j2"
        dest: "/lib/systemd/system/aidecheck.service"
      - src: "rhel/lib/systemd/system/aidecheck.timer.j2"
        dest: "/lib/systemd/system/aidecheck.timer"
      when: not audit_only and not aidecheck_service_check.remediation_status
    
    # 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
    - name: 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
      systemd:
        daemon_reload: true
      changed_when: false
      when: not audit_only and not aidecheck_service_check.remediation_status
    
    # 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
    - name: 5.3.2 Ensure filesystem integrity is regularly checked | Remediation
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      changed_when: false
      loop:
      - "aidecheck.service"
      - "aidecheck.timer"
      when: not audit_only and not aidecheck_service_check.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"




  # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools
  #
  # Audit tools include, but are not limited to, vendor-provided and open source audit tools
  # needed to successfully view and manipulate audit information system activity and
  # records. Audit tools include custom queries and report generators.
  - name: "5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools"
    block:
    # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
      stat:
        path: /etc/aide.conf.d/
      changed_when: false
      register: aide_conf_directory

     # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
      find:
        paths:
          - "/etc/aide.conf.d/"
        patterns:
          - "*.conf"
      changed_when: false
      register: aide_conf_file_list
      when: aide_conf_directory.stat.exists

    # Define aide conf file list
    - set_fact:
        aide_conf_files: "{{ aide_conf_files | default([]) + [item.path]}}"
      changed_when: false
      loop: "{{ aide_conf_file_list.files | default([]) | list }}"
      loop_control:
        label: "{{ item.path | default()}}"
      when: aide_conf_directory.stat.exists

    # Append /etc/aide.conf to aide conf file list
    - set_fact:
        aide_conf_files: "{{ aide_conf_files | default([]) + ['/etc/aide.conf'] }}"
      changed_when: false

    # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Audit
      shell:
        cmd |
          grep -Ps -- '(\/sbin\/(audit|au)\H*\b)'  /etc/aide.conf /etc/aide.conf.d/*.conf | awk -F ':' '{print $2}' | grep -Eq '^(\/sbin\/{{ item }})[\s]*.(p\+i\+n\+u\+g\+s\+b\+acl\+xattrs\+sha512)[\s]{0,}' &&
          echo 'configured' || echo 'not_configured'
      changed_when: false
      loop:
      - "auditctl" 
      - "auditd" 
      - "ausearch" 
      - "aureport" 
      - "autrace" 
      - "augenrules" 
      register: aide_cryptographic_mechanisms_status

    # Define remediation status
    - set_fact:
        remediation_status: true
      changed_when: false
    
    # Check if all tools are configured
    - set_fact:
        remediation_status: "{{ true if (remediation_status and item.stdout == 'configured') else false }}"
      loop: "{{ aide_cryptographic_mechanisms_status.results | default([]) | list }}"
      loop_control:
        label: "{{ item.stdout | default() }}"
      changed_when: false

    # Extract audit result
    - set_fact:
        aide_cryptographic_mechanisms_check:
          name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools
          scored: true
          automated: false
          remediation_status: "{{ true if remediation_status else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [aide_cryptographic_mechanisms_check] }}"
      changed_when: false

    # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
      file:
        path: "/etc/aide.conf.d/"
        state: directory
        owner: root
        group: root
      when: not audit_only and not aide_cryptographic_mechanisms_check.remediation_status

    # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
      copy:
        dest: "/etc/aide.conf.d/00-cis-cryptographic-mechanisms.conf"
        content: |
          # Audit Tools
        mode: "0644"
        owner: root
        group: root
      when: not audit_only and not aide_cryptographic_mechanisms_check.remediation_status
    
    # 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
    - name: 5.3.3 Ensure cryptographic mechanisms are used to protect the integrity of audit tools | Remediation
      shell:
        cmd |
          grep -Ps -- '(\/sbin\/(audit|au)\H*\b)'  /etc/aide.conf /etc/aide.conf.d/*.conf | awk -F ':' '{print $2}' | grep -Eq '^(\/sbin\/{{ item }})[\s]*.(p\+i\+n\+u\+g\+s\+b\+acl\+xattrs\+sha512)[\s]{0,}' &&
          echo 'configured' || echo '/sbin/{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512' >> /etc/aide.conf.d/00-cis-cryptographic-mechanisms.conf
      changed_when: false
      loop:
      - "auditctl" 
      - "auditd" 
      - "ausearch" 
      - "aureport" 
      - "autrace" 
      - "augenrules"
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"