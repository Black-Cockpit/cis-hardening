# 1.1.2 Configure Filesystem Partitions
- name: 1.1.2 Configure Filesystem Partitions
  block:
  # 1.1.2.1.1 Ensure /tmp is a separate partition
  #
  # The /tmp directory is a world-writable directory used for temporary storage by all users
  # and some applications.
  - name: 1.1.2.1.1 Ensure /tmp is a separate partition
    block:
    # 1.1.2.1.1 Ensure /tmp is a separate partition | Audit
    - name: 1.1.2.1.1 Ensure /tmp is a separate partition | Audit
      shell:
        cmd: findmnt -nk /tmp | grep -E '\s/tmp\s' && echo exists || echo not_exists
      changed_when: false
      register: tmp_mount_status
    # Check that systemd will mount the /tmp partition
    - name: 1.1.2.1.1 Ensure /tmp is a separate partition | Audit
      systemd:
        name: tmp.mount
      changed_when: false
      register: tmp_systemd_status

    # Extract audit result
    - set_fact:
        tmp_mount:
          name: 1.1.2.1.1 Ensure /tmp is a separate partition
          scored: true
          automated: true
          remediation_status: "{{ true if (tmp_mount_status.stdout == 'exists' and (tmp_systemd_status.status.UnitFileState != 'disabled' or tmp_systemd_status.status.UnitFileState == 'masked')) else false }}"
          remediation: "Consider to mount /tmp is a separate partition and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [tmp_mount] }}"
      changed_when: false

    # 1.1.2.1.1 Ensure /tmp is a separate partition | Remediation
    - name: 1.1.2.1.1 Ensure /tmp is a separate partition | Remediation
      systemd:
        name: tmp.mount
        enabled: true
        masked: false
        daemon_reload: yes
        state: started
      when: not audit_only and not tmp_mount.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.1.2 Ensure nodev option set on /tmp partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.1.2 Ensure nodev option set on /tmp partition
    block:
    # 1.1.2.1.2 Ensure nodev option set on /tmp partition | Audit
    - name: 1.1.2.1.2 Ensure nodev option set on /tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/tmp\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: tmp_nodev_status

    # Extract audit result
    - set_fact:
        tmp_nodev:
          name: 1.1.2.1.2 Ensure nodev option set on /tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if tmp_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /tmp partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [tmp_nodev] }}"
      changed_when: false

    # 1.1.2.1.2 Ensure nodev option set on /tmp partition | Remediation
    - name: 1.1.2.1.2 Ensure nodev option set on /tmp partition | Remediation
      debug:
        msg: "Consider to mount /tmp partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not tmp_nodev.remediation_status
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.1.3 Ensure nosuid option set on /tmp partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.1.3 Ensure nosuid option set on /tmp partition
    block:
    # 1.1.2.1.3 Ensure nosuid option set on /tmp partition | Audit
    - name: 1.1.2.1.3 Ensure nosuid option set on /tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/tmp\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: tmp_nosuid_status

    # Extract audit result
    - set_fact:
        tmp_nosuid:
          name: 1.1.2.1.3 Ensure nosuid option set on /tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if tmp_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /tmp partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [tmp_nosuid] }}"
      changed_when: false

    # 1.1.2.1.3 Ensure nosuid option set on /tmp partition | Remediation
    - name: 1.1.2.1.3 Ensure nosuid option set on /tmp partition | Remediation
      debug:
        msg: "Consider to mount /tmp partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not tmp_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.1.4 Ensure noexec option set on /tmp partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.1.4 Ensure noexec option set on /tmp partition
    block:
    # 1.1.2.1.4 Ensure noexec option set on /tmp partition | Audit
    - name: 1.1.2.1.4 Ensure noexec option set on /tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/tmp\s' | grep -v noexec && echo compliant || echo not_compliant
      changed_when: false
      register: tmp_noexec_status

    # Extract audit result
    - set_fact:
        tmp_noexec:
          name: 1.1.2.1.4 Ensure noexec option set on /tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if tmp_noexec_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /tmp partition with noexec option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [tmp_noexec] }}"
      changed_when: false

    # 1.1.2.1.4 Ensure noexec option set on /tmp partition | Remediation
    - name: 1.1.2.1.4 Ensure noexec option set on /tmp partition | Remediation
      debug:
        msg: "Consider to mount /tmp partition with noexec option by modifing /etc/fstab"
      when: not audit_only and not tmp_noexec.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.2.1 Ensure /dev/shm is a separate partition
  #
  # The /dev/shm directory is a world-writable directory that can function as shared memory
  # that facilitates inter process communication (IPC).
  - name: 1.1.2.2.1 Ensure /dev/shm is a separate partition
    block:
    # 1.1.2.2.1 Ensure /dev/shm is a separate partition | Audit
    - name: 1.1.2.2.1 Ensure /dev/shm is a separate partition | Audit
      shell:
        cmd: findmnt -nk /dev/shm | grep -E '\s/dev/shm\s' && echo exists || echo not_exists
      changed_when: false
      register: dev_shm_partition_status

    # Extract audit result
    - set_fact:
        dev_shm_partition:
          name: 1.1.2.2.1 Ensure /dev/shm is a separate partition
          scored: true
          automated: true
          remediation_status: "{{ true if dev_shm_partition_status.stdout == 'exists' else false }}"
          remediation: "Consider to mount /dev/shm is a separate partition and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [dev_shm_partition] }}"
      changed_when: false

    # 1.1.2.1.4 Ensure noexec option set on /tmp partition | Remediation
    - name: 1.1.2.2.1 Ensure /dev/shm is a separate partition | Remediation
      debug:
        msg: "Consider to mount /dev/shm in a seperate partition and update /etc/fstab"
      when: not audit_only and not dev_shm_partition.remediation_status
      changed_when: false

    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"


  # 1.1.2.2.2 Ensure nodev option set on /dev/shm partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.2.2 Ensure nodev option set on /dev/shm partition
    block:
    # 1.1.2.2.2 Ensure nodev option set on /dev/shm partition | Audit
    - name: 1.1.2.2.2 Ensure nodev option set on /dev/shm partition | Audit
      shell:
        cmd: mount | grep -E '\s/dev/shm\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: shm_nodev_status

    # Extract audit result
    - set_fact:
        shm_nodev:
          name: 1.1.2.2.2 Ensure nodev option set on /dev/shm partition
          scored: true
          automated: false
          remediation_status: "{{ true if shm_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /dev/shm partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [shm_nodev] }}"
      changed_when: false

    # 1.1.2.2.2 Ensure nodev option set on /dev/shm partition| Remediation
    - name: 1.1.2.2.2 Ensure nodev option set on /dev/shm partition | Remediation
      debug:
        msg: "Consider to mount /dev/shm partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not shm_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition
    block:
    # 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition | Audit
    - name: 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition | Audit
      shell:
        cmd: mount | grep -E '\s/dev/shm\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: shm_nosuid_status

    # Extract audit result
    - set_fact:
        shm_nosuid:
          name: 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition
          scored: true
          automated: false
          remediation_status: "{{ true if shm_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /dev/shm partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [shm_nosuid] }}"
      changed_when: false

    # 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition | Remediation
    - name: 1.1.2.2.3 Ensure nosuid option set on /dev/shm partition | Remediation
      debug:
        msg: "Consider to mount /dev/shm partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not shm_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.2.4 Ensure noexec option set on /dev/shm partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.2.4 Ensure noexec option set on /dev/shm partition
    block:
    # 1.1.2.2.4 Ensure noexec option set on /dev/shm partition | Audit
    - name: 1.1.2.2.4 Ensure noexec option set on /dev/shm partition | Audit
      shell:
        cmd: mount | grep -E '\s/dev/shm\s' | grep -v noexec && echo compliant || echo not_compliant
      changed_when: false
      register: shm_noexec_status

    # Extract audit result
    - set_fact:
        shm_noexec:
          name: 1.1.2.2.4 Ensure noexec option set on /dev/shm partition
          scored: true
          automated: false
          remediation_status: "{{ true if shm_noexec_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /dev/shm partition with noexec option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [shm_noexec] }}"
      changed_when: false

    # 1.1.2.2.4 Ensure noexec option set on /dev/shm partition | Remediation
    - name: 1.1.2.2.4 Ensure noexec option set on /dev/shm partition | Remediation
      debug:
        msg: "Consider to mount /dev/shm partition with noexec option by modifing /etc/fstab"
      when: not audit_only and not shm_noexec.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.3.1 Ensure separate partition exists for /home
  #
  # The /home directory is used to support disk storage needs of local users.
  - name: 1.1.2.3.1 Ensure separate partition exists for /home
    block:
    # 1.1.2.3.1 Ensure separate partition exists for /home | Audit
    - name: 1.1.2.3.1 Ensure separate partition exists for /home | Audit
      shell:
        cmd: mount | grep /home && echo compliant || echo not_compliant
      changed_when: false
      register: home_partition_status

    # Extract audit result
    - set_fact:
        home_partition:
          name: 1.1.2.3.1 Ensure separate partition exists for /home
          scored: true
          automated: false
          remediation_status: "{{ true if home_partition_status.stdout == 'compliant' else false }}"
          remediation: "Consider to create a separate partition for /home and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [home_partition] }}"
      changed_when: false

    # 1.1.2.3.1 Ensure separate partition exists for /home | Remediation
    - name: 1.1.2.3.1 Ensure separate partition exists for /home | Remediation
      debug:
        msg: "Consider to create a separate partition for /home and update /etc/fstab"
      when: not audit_only and not home_partition.remediation_status
      changed_when: false
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 1.1.2.3.2 Ensure nodev option set on /home partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.3.2 Ensure nodev option set on /home partition
    block:
    # 1.1.2.3.2 Ensure nodev option set on /home partition | Audit
    - name: 1.1.2.3.2 Ensure nodev option set on /home partition | Audit
      shell:
        cmd: mount | grep -E '\s/home\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: home_nodev_status

    # Extract audit result
    - set_fact:
        home_nodev:
          name: 1.1.2.3.2 Ensure nodev option set on /home partition
          scored: true
          automated: false
          remediation_status: "{{ true if home_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /home partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [home_nodev] }}"
      changed_when: false

    # 1.1.2.3.2 Ensure nodev option set on /home partition | Remediation
    - name: 1.1.2.3.2 Ensure nodev option set on /home partition | Remediation
      debug:
        msg: "Consider to mount /home partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not home_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.3.3 Ensure nosuid option set on /home partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.3.3 Ensure nosuid option set on /home partition
    block:
    # 1.1.2.3.3 Ensure nosuid option set on /home partition | Audit
    - name: 1.1.2.3.3 Ensure nosuid option set on /home partition | Audit
      shell:
        cmd: mount | grep -E '\s/home\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: home_nosuid_status

    # Extract audit result
    - set_fact:
        home_nosuid:
          name: 1.1.2.3.3 Ensure nosuid option set on /home partition
          scored: true
          automated: false
          remediation_status: "{{ true if home_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /home partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [home_nosuid] }}"
      changed_when: false

    # 1.1.2.3.3 Ensure nosuid option set on /home partition | Remediation
    - name: 1.1.2.3.3 Ensure nosuid option set on /home partition | Remediation
      debug:
        msg: "Consider to mount /home partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not home_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.4.1 Ensure separate partition exists for /var
  #
  # The /var directory is used by daemons and other system services to temporarily store
  # dynamic data. Some directories created by these processes may be world-writable.
  - name: 1.1.2.4.1 Ensure separate partition exists for /var
    block:
    # 1.1.2.4.1 Ensure separate partition exists for /var | Audit
    - name: 1.1.2.4.1 Ensure separate partition exists for /var | Audit
      shell:
        cmd: mount | grep -E '\s/var\s' && echo compliant || echo not_compliant
      changed_when: false
      register: var_partition_status

    # Extract audit result
    - set_fact:
        var_partition:
          name: 1.1.2.4.1 Ensure separate partition exists for /var
          scored: true
          automated: false
          remediation_status: "{{ true if var_partition_status.stdout == 'compliant' else false }}"
          remediation: "Consider to create a separate partition for /var and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_partition] }}"
      changed_when: false

    # 1.1.2.4.1 Ensure separate partition exists for /var | Remediation
    - name: 1.1.2.4.1 Ensure separate partition exists for /var | Remediation
      debug:
        msg: "Consider to create a separate partition for /var and update /etc/fstab"
      when: not audit_only and not var_partition.remediation_status
      changed_when: false
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 1.1.2.4.2 Ensure nodev option set on /var partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.4.2 Ensure nodev option set on /var partition
    block:
    # 1.1.2.4.2 Ensure nodev option set on /var partition | Audit
    - name: 1.1.2.4.2 Ensure nodev option set on /var partition | Audit
      shell:
        cmd: mount | grep -E '\s/var\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: var_nodev_status

    # Extract audit result
    - set_fact:
        var_nodev:
          name: 1.1.2.4.2 Ensure nodev option set on /var partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_nodev] }}"
      changed_when: false

    # 1.1.2.4.2 Ensure nodev option set on /var partition | Remediation
    - name: 1.1.2.4.2 Ensure nodev option set on /var partition | Remediation
      debug:
        msg: "Consider to mount /var partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not var_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.4.3 Ensure nosuid option set on /var partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.4.3 Ensure nosuid option set on /var partition
    block:
    # 1.1.2.4.3 Ensure nosuid option set on /var partition | Audit
    - name: 1.1.2.4.3 Ensure nosuid option set on /var partition | Audit
      shell:
        cmd: mount | grep -E '\s/var\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: var_nosuid_status

    # Extract audit result
    - set_fact:
        var_nosuid:
          name: 1.1.2.4.3 Ensure nosuid option set on /var partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_nosuid] }}"
      changed_when: false

    # 1.1.2.4.3 Ensure nosuid option set on /var partition | Remediation
    - name: 1.1.2.4.3 Ensure nosuid option set on /var partition | Remediation
      debug:
        msg: "Consider to mount /var partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not var_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.5.1 Ensure separate partition exists for /var/tmp
  #
  # The /var/tmp directory is a world-writable directory used for temporary storage by all
  # users and some applications.
  - name: 1.1.2.5.1 Ensure separate partition exists for /var/tmp
    block:
    # 1.1.2.5.1 Ensure separate partition exists for /var/tmp | Audit
    - name: 1.1.2.5.1 Ensure separate partition exists for /var/tmp | Audit
      shell:
        cmd: mount | grep /var/tmp && echo compliant || echo not_compliant
      changed_when: false
      register: var_tmp_partition_status

    # Extract audit result
    - set_fact:
        var_tmp_partition:
          name: 1.1.2.5.1 Ensure separate partition exists for /var/tmp
          scored: true
          automated: false
          remediation_status: "{{ true if var_tmp_partition_status.stdout == 'compliant' else false }}"
          remediation: "Consider to create a separate partition for /var/tmp and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_tmp_partition] }}"
      changed_when: false

    # 1.1.2.5.1 Ensure separate partition exists for /var/tmp | Remediation
    - name: 1.1.2.5.1 Ensure separate partition exists for /var/tmp | Remediation
      debug:
        msg: "Consider to create a separate partition for /var/tmp and update /etc/fstab"
      when: not audit_only and not var_tmp_partition.remediation_status
      changed_when: false
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 1.1.2.5.2 Ensure nodev option set on /var/tmp partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.5.2 Ensure nodev option set on /var/tmp partition
    block:
    # 1.1.2.5.2 Ensure nodev option set on /var/tmp partition | Audit
    - name: 1.1.2.5.2 Ensure nodev option set on /var/tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/tmp\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: var_tmp_nodev_status

    # Extract audit result
    - set_fact:
        var_tmp_nodev:
          name: 1.1.2.5.2 Ensure nodev option set on /var/tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_tmp_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/tmp partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_tmp_nodev] }}"
      changed_when: false

    # 1.1.2.5.2 Ensure nodev option set on /var/tmp partition | Remediation
    - name: 1.1.2.5.2 Ensure nodev option set on /var/tmp partition | Remediation
      debug:
        msg: "Consider to mount /var/tmp partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not var_tmp_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition
    block:
    # 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition | Audit
    - name: 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/tmp\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: var_tmp_nosuid_status

    # Extract audit result
    - set_fact:
        var_tmp_nosuid:
          name: 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_tmp_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/tmp partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_tmp_nosuid] }}"
      changed_when: false

    # 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition | Remediation
    - name: 1.1.2.5.3 Ensure nosuid option set on /var/tmp partition | Remediation
      debug:
        msg: "Consider to mount /var/tmp partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not var_tmp_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.5.4 Ensure noexec option set on /var/tmp partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.5.4 Ensure noexec option set on /var/tmp partition
    block:
    # 1.1.2.5.4 Ensure noexec option set on /var/tmp partition | Audit
    - name: 1.1.2.5.4 Ensure noexec option set on /var/tmp partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/tmp\s' | grep -v noexec && echo compliant || echo not_compliant
      changed_when: false
      register: var_tmp_noexec_status

    # Extract audit result
    - set_fact:
        var_tmp_noexec:
          name: 1.1.2.5.4 Ensure noexec option set on /var/tmp partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_tmp_noexec_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/tmp partition with noexec option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_tmp_noexec] }}"
      changed_when: false

    # 1.1.2.5.4 Ensure noexec option set on /var/tmp partition | Remediation
    - name: 1.1.2.5.4 Ensure noexec option set on /var/tmp partition | Remediation
      debug:
        msg: "Consider to mount /var/tmp partition with noexec option by modifing /etc/fstab"
      when: not audit_only and not var_tmp_noexec.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.6.1 Ensure separate partition exists for /var/log
  #
  # The /var/log directory is used by system services to store log data .
  - name: 1.1.2.6.1 Ensure separate partition exists for /var/log
    block:
    # 1.1.2.6.1 Ensure separate partition exists for /var/log | Audit
    - name: 1.1.2.6.1 Ensure separate partition exists for /var/log | Audit
      shell:
        cmd: mount | grep /var/log && echo compliant || echo not_compliant
      changed_when: false
      register: var_log_partition_status

    # Extract audit result
    - set_fact:
        var_log_partition:
          name: 1.1.2.6.1 Ensure separate partition exists for /var/log
          scored: true
          automated: false
          remediation_status: "{{ true if var_log_partition_status.stdout == 'compliant' else false }}"
          remediation: "Consider to create a separate partition for /var/log and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_log_partition] }}"
      changed_when: false

    # 1.1.2.6.1 Ensure separate partition exists for /var/log | Remediation
    - name: 1.1.2.6.1 Ensure separate partition exists for /var/log | Remediation
      debug:
        msg: "Consider to create a separate partition for /var/log and update /etc/fstab"
      when: not audit_only and not var_log_partition.remediation_status
      changed_when: false
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 1.1.2.6.2 Ensure nodev option set on /var/log partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.6.2 Ensure nodev option set on /var/log partition
    block:
    # 1.1.2.6.2 Ensure nodev option set on /var/log partition | Audit
    - name: 1.1.2.6.2 Ensure nodev option set on /var/log partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: var_log_nodev_status

    # Extract audit result
    - set_fact:
        var_log_nodev:
          name: 1.1.2.6.2 Ensure nodev option set on /var/log partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_log_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_log_nodev] }}"
      changed_when: false

    # 1.1.2.6.2 Ensure nodev option set on /var/log partition | Remediation
    - name: 1.1.2.6.2 Ensure nodev option set on /var/log partition | Remediation
      debug:
        msg: "Consider to mount /var/log partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not var_log_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.6.3 Ensure nosuid option set on /var/log partition
  #
  # The nosuid mount option specifies that the filesystem cannot contain setuid files.
  - name: 1.1.2.6.3 Ensure nosuid option set on /var/log partition
    block:
    # 1.1.2.6.3 Ensure nosuid option set on /var/log partition | Audit
    - name: 1.1.2.6.3 Ensure nosuid option set on /var/log partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: var_log_nosuid_status

    # Extract audit result
    - set_fact:
        var_log_nosuid:
          name: 1.1.2.6.3 Ensure nosuid option set on /var/log partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_log_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_log_nosuid] }}"
      changed_when: false

    # 1.1.2.6.3 Ensure nosuid option set on /var/log partition | Remediation
    - name: 1.1.2.6.3 Ensure nosuid option set on /var/log partition | Remediation
      debug:
        msg: "Consider to mount /var/log partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not var_log_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.6.4 Ensure noexec option set on /var/log partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.6.4 Ensure noexec option set on /var/log partition
    block:
    # 1.1.2.6.4 Ensure noexec option set on /var/log partition | Audit
    - name: 1.1.2.6.4 Ensure noexec option set on /var/log partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log\s' | grep -v noexec && echo compliant || echo not_compliant
      changed_when: false
      register: var_log_noexec_status

    # Extract audit result
    - set_fact:
        var_log_noexec:
          name: 1.1.2.6.4 Ensure noexec option set on /var/log partition
          scored: true
          automated: false
          remediation_status: "{{ true if var_log_noexec_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log partition with noexec option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_log_noexec] }}"
      changed_when: false

    # 1.1.2.6.4 Ensure noexec option set on /var/log partition | Remediation
    - name: 1.1.2.6.4 Ensure noexec option set on /var/log partition | Remediation
      debug:
        msg: "Consider to mount /var/log partition with noexec option by modifing /etc/fstab"
      when: not audit_only and not var_log_noexec.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.7.1 Ensure separate partition exists for /var/log/audit
  #
  # The auditing daemon, auditd , stores log data in the /var/log/audit directory.
  - name: 1.1.2.7.1 Ensure separate partition exists for /var/log/audit
    block:
    # 1.1.2.7.1 Ensure separate partition exists for /var/log/audit | Audit
    - name: 1.1.2.7.1 Ensure separate partition exists for /var/log/audit | Audit
      shell:
        cmd: mount | grep /var/log/audit && echo compliant || echo not_compliant
      changed_when: false
      register: var_log_audit_partition_status

    # Extract audit result
    - set_fact:
        var_log_audit_partition:
          name: 1.1.2.7.1 Ensure separate partition exists for /var/log/audit
          scored: true
          automated: false
          remediation_status: "{{ true if var_log_audit_partition_status.stdout == 'compliant' else false }}"
          remediation: "Consider to create a separate partition for /var/log/audit and update /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [var_log_audit_partition] }}"
      changed_when: false

    # 1.1.2.7.1 Ensure separate partition exists for /var/log/audit | Remediation
    - name: 1.1.2.7.1 Ensure separate partition exists for /var/log/audit | Remediation
      debug:
        msg: "Consider to create a separate partition for /var/log/audit and update /etc/fstab"
      when: not audit_only and not var_log_audit_partition.remediation_status
      changed_when: false
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition
  #
  # The nodev mount option specifies that the filesystem cannot contain special devices.
  - name: 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition
    block:
    # 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition | Audit
    - name: 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log/audit\s' | grep -v nodev && echo compliant || echo not_compliant
      changed_when: false
      register: audit_log_nodev_status

    # Extract audit result
    - set_fact:
        audit_log_nodev:
          name: 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition
          scored: true
          automated: false
          remediation_status: "{{ true if audit_log_nodev_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log/audit partition with nodev option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [audit_log_nodev] }}"
      changed_when: false

    # 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition | Remediation
    - name: 1.1.2.7.2 Ensure nodev option set on /var/log/audit partition | Remediation
      debug:
        msg: "Consider to mount /var/log/audit partition with nodev option by modifing /etc/fstab"
      when: not audit_only and not audit_log_nodev.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition
    block:
    # 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition | Audit
    - name: 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log/audit\s' | grep -v nosuid && echo compliant || echo not_compliant
      changed_when: false
      register: audit_log_nosuid_status

    # Extract audit result
    - set_fact:
        audit_log_nosuid:
          name: 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition
          scored: true
          automated: false
          remediation_status: "{{ true if audit_log_nosuid_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log/audit partition with nosuid option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [audit_log_nosuid] }}"
      changed_when: false

    # 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition | Remediation
    - name: 1.1.2.7.3 Ensure nosuid option set on /var/log/audit partition | Remediation
      debug:
        msg: "Consider to mount /var/log/audit partition with nosuid option by modifing /etc/fstab"
      when: not audit_only and not audit_log_nosuid.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition
  #
  # The noexec mount option specifies that the filesystem cannot contain executable binaries.
  - name: 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition
    block:
    # 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition | Audit
    - name: 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition | Audit
      shell:
        cmd: mount | grep -E '\s/var/log/audit\s' | grep -v noexec && echo compliant || echo not_compliant
      changed_when: false
      register: audit_log_noexec_status

    # Extract audit result
    - set_fact:
        audit_log_noexec:
          name: 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition
          scored: true
          automated: false
          remediation_status: "{{ true if audit_log_noexec_status.stdout == 'compliant' else false }}"
          remediation: "Consider to mount /var/log/audit partition with noexec option by updating /etc/fstab"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [audit_log_noexec] }}"
      changed_when: false

    # 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition | Remediation
    - name: 1.1.2.7.4 Ensure noexec option set on /var/log/audit partition | Remediation
      debug:
        msg: "Consider to mount /var/log/audit partition with noexec option by modifing /etc/fstab"
      when: not audit_only and not audit_log_noexec.remediation_status
      changed_when: false
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"
