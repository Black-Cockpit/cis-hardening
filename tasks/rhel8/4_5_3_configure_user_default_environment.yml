# 4.5.3 Configure user default environment
- name: 4.5.3 Configure user default environment
  block:
  # 4.5.3.1 Ensure nologin is not listed in /etc/shells
  #
  # /etc/shells is is a text file which contains the full pathnames of valid login shells. This file
  # is consulted by chsh and available to be queried by other programs.
  # 
  # Be aware that there are programs which consult this file to find out if a user is a normal
  # user; for example, FTP daemons traditionally disallow access to users with shells not
  # included in this file.
  - name: "4.5.3.1 Ensure nologin is not listed in /etc/shells"
    block:
    # 4.5.3.1 Ensure nologin is not listed in /etc/shells | Audit
    - name: 4.5.3.1 Ensure nologin is not listed in /etc/shells | Audit
      shell:
        cmd: grep -q '/nologin\b' /etc/shells && echo 'not_configured' || echo 'configured' 
      changed_when: false
      register: shells_nologin_status_check

    # Extract audit result
    - set_fact:
        shells_nologin_check:
          name: 4.5.3.1 Ensure nologin is not listed in /etc/shells
          scored: true
          automated: true
          remediation_status: "{{ true if shells_nologin_status_check.stdout == 'configured' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [shells_nologin_check] }}"
      changed_when: false

    # 4.5.3.1 Ensure nologin is not listed in /etc/shells | Remediation
    - name: 4.5.3.1 Ensure nologin is not listed in /etc/shells | Remediation
      lineinfile:
        path: "/etc/shells"
        regexp: ".*(nologin).*"
        state: absent
      when: not audit_only and not shells_nologin_check.remediation_status
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"



  # 4.5.3.2 Ensure default user shell timeout is configured
  #
  # TMOUT is an environmental setting that determines the timeout of a shell in seconds.
  # 
  # - TMOUT n         : Sets the shell timeout to n seconds. A setting of TMOUT=0 disables
  #                     timeout.
  #
  # - readonly TMOUT  : Sets the TMOUT environmental variable as readonly,
  #                     preventing unwanted modification during run-time.
  # 
  # - export TMOUT    : exports the TMOUT variable
  #
  # System Wide Shell Configuration Files:
  # - /etc/profile    : used to set system wide environmental variables on users shells.
  #                     The variables are sometimes the same ones that are in the .bash_profile ,
  #                     however this file is used to set an initial PATH or PS1 for all shell users of the
  #                     system. is only executed for interactive login shells, or shells executed with
  #                     the --login parameter.
  # 
  # - /etc/profile.d  : will execute the scripts within
  #                     /etc/profile.d/*.sh . It is recommended to place your configuration in a shell
  #                     script within /etc/profile.d to set your own system wide environmental
  #                     variables.
  #
  # - /etc/bashrc:    : System wide version of .bashrc . In Fedora derived distributions,
  #                     /etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects output
  #                     to /dev/null if non-interactive. Is only executed for interactive shells or if
  #                     BASH_ENV is set to /etc/bashrc .
  - name: "4.5.3.2 Ensure default user shell timeout is configured"
    block:
    # 4.5.3.2 Ensure default user shell timeout is configured | Audit
    - name: 4.5.3.2 Ensure default user shell timeout is configured | Audit
      shell:
        cmd: |
          [ -f /etc/bashrc ] && BRC="/etc/bashrc"

          for f in "$BRC" /etc/profile /etc/profile.d/*.sh; do
              grep -Pq '^\s*([^#]+\s+)?TMOUT=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9])\b' "$f" &&
                  grep -Pq '^\s*([^#]+;\s*)?readonly\s+TMOUT(\s+|\s*;|\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\b' "$f" &&
                  grep -Pq '^\s*([^#]+;\s*)?export\s+TMOUT(\s+|\s*;|\s*$|=(900|[1-8][0-9][0-9]|[1-9][0-9]|[1-9]))\b' "$f" &&
                  echo 'configured' && exit 0
          done
          
          echo 'not_configured'
      changed_when: false
      register: default_tmout_status_check

    # Extract audit result
    - set_fact:
        default_tmout_check:
          name: 4.5.3.2 Ensure default user shell timeout is configured
          scored: true
          automated: true
          remediation_status: "{{ true if default_tmout_status_check.stdout == 'configured' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [default_tmout_check] }}"
      changed_when: false

    # 4.5.3.2 Ensure default user shell timeout is configured | Remediation
    - name: 4.5.3.2 Ensure default user shell timeout is configured | Remediation
      stat:
        path: "/etc/bashrc"
      register: bash_rc_file
      changed_when: false
      when: not audit_only and not default_tmout_check.remediation_status

    # 4.5.3.2 Ensure default user shell timeout is configured | Remediation
    - name: 4.5.3.2 Ensure default user shell timeout is configured | Remediation
      find:
        paths:
          - "/etc/profile.d/"
        patterns:
          - "*.sh"
      register: profiled_files
      changed_when: false
      when: not audit_only and not default_tmout_check.remediation_status

    # Define default shell environment file list
    - set_fact:
        default_shell_environment_files: "{{ (default_shell_environment_files | default([])) + [item.path] }}"
      changed_when: false
      loop_control:
        label: "{{ item.path }}"
      loop: "{{ profiled_files.files | default([]) | list }}"
      when: not audit_only and not default_tmout_check.remediation_status

    # Append /etc/bashrc to default shell environment file list
    - set_fact:
        default_shell_environment_files: "{{ (default_shell_environment_files | default([])) + ['/etc/bashrc'] }}"
      changed_when: false
      when: not audit_only and (bash_rc_file.stat.exists | default(false)) and not default_tmout_check.remediation_status

    # Append /etc/profile to default shell environment file list
    - set_fact:
        default_shell_environment_files: "{{ (default_shell_environment_files | default([])) + ['/etc/profile'] }}"
      changed_when: false
      when: not audit_only and not default_tmout_check.remediation_status

    # 4.5.3.2 Ensure default user shell timeout is configured | Remediation
    - name: 4.5.3.2 Ensure default user shell timeout is configured | Remediation
      lineinfile:
        path: "{{ item }}"
        regexp: ".*TMOUT.*"
        state: absent
      loop: "{{ default_shell_environment_files }}"
      when: not audit_only and not default_tmout_check.remediation_status

    # 4.5.3.2 Ensure default user shell timeout is configured | Remediation
    - name: 4.5.3.2 Ensure default user shell timeout is configured | Remediation
      copy:
        dest: "/etc/profile.d/00-cis-tmout.sh"
        content: |
          TMOUT=900
          readonly TMOUT
          export TMOUT
        owner: root
        mode: "0644"
      when: not audit_only and not default_tmout_check.remediation_status
    
    tags:
    - "server_level_1"
    - "workstation_level_1"
    when: "'server_level_1' in levels or 'workstation_level_1' in levels"



  # 4.5.3.3 Ensure default user umask is configured
  #
  # The user file-creation mode mask ( umask ) is used to determine the file permission for
  # newly created directories and files. In Linux, the default permissions for any newly
  # created directory is 0777 ( rwxrwxrwx ), and for any newly created file it is 0666 ( rw-rw-
  # rw- ). The umask modifies the default Linux permissions by restricting (masking) these
  # permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in the
  # umask are cleared in the resulting file mode.
  # - Octal (Numeric) Value - Represented by either three or four digits. ie umask 0027
  #   or umask 027 . If a four digit umask is used, the first digit is ignored. The remaining
  #   three digits effect the resulting permissions for user, group, and world/other
  #   respectively.
  #
  # - Symbolic Value - Represented by a comma separated list for User u , group g ,
  #   and world/other o . The permissions listed are not masked by umask . ie a umask
  #   set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask 027 .
  #   This umask would set a newly created directory with file mode drwxr-x--- and a
  #   newly created file with file mode rw-r----- .
  #
  # The default umask can be set to use the pam_umask module or in a System Wide Shell
  # Configuration File . The user creating the directories or files has the discretion of
  # changing the permissions via the chmod command, or choosing a different default
  # umask by adding the umask command into a User Shell Configuration File , (
  # .bash_profile or .bashrc ), in their home directory.
  - name: "4.5.3.3 Ensure default user umask is configured"
    block:
    # 4.5.3.3 Ensure default user umask is configured | Audit
    - name: 4.5.3.3 Ensure default user umask is configured | Audit
      shell:
        cmd: |
          l_output="" l_output2=""

          file_umask_chk() {
              if grep -Psiq -- '^\h*umask\h+(0?[0-7][2-7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\h*#.*)?$' "$l_file"; then
                  l_output="$l_output\n - umask is set correctly in \"$l_file\""
              elif grep -Psiq -- '^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))' "$l_file"; then
                  l_output2="$l_output2\n - umask is incorrectly set in \"$l_file\""
              fi
          }

          while IFS= read -r -d $'\0' l_file; do
              file_umask_chk
          done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)

          l_file="/etc/profile" && file_umask_chk
          l_file="/etc/bashrc" && file_umask_chk
          l_file="/etc/bash.bashrc" && file_umask_chk
          l_file="/etc/pam.d/postlogin"

          if grep -Psiq -- '^\h*session\h+[^#\n\r]+\h+pam_umask\.so\h+([^#\n\r]+\h+)?umask=(0?[0-7][2-7]7)\b' "$l_file"; then
              l_output1="$l_output1\n - umask is set correctly in \"$l_file\""
          elif grep -Psiq '^\h*session\h+[^#\n\r]+\h+pam_umask\.so\h+([^#\n\r]+\h+)?umask=(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b))' "$l_file"; then
              l_output2="$l_output2\n - umask is incorrectly set in \"$l_file\""
          fi

          l_file="/etc/login.defs" && file_umask_chk
          l_file="/etc/default/login" && file_umask_chk

          [[ -z "$l_output" && -z "$l_output2" ]] && l_output2="$l_output2\n - umask is not set"
          if [ -z "$l_output2" ]; then
              echo 'configured'
          else
              echo 'not_configured'
          fi
      changed_when: false
      register: default_user_umask_status_check

    # Extract audit result
    - set_fact:
        default_user_umask_check:
          name: 4.5.3.3 Ensure default user umask is configured
          scored: true
          automated: true
          remediation_status: "{{ true if default_user_umask_status_check.stdout == 'configured' else false }}"
      changed_when: false

    # Appending audit result
    - set_fact:
        audit_result: "{{ (audit_result | default([])) + [default_user_umask_check] }}"
      changed_when: false

    # 4.5.3.3 Ensure default user umask is configured | Remediation
    - name: 4.5.3.3 Ensure default user umask is configured | Remediation
      replace:
        path: "{{ item }}"
        regexp: '^(umask)[\s]{1,}[\d]{1,}.+'
        replace: ''
      loop:
      - "/etc/profile"
      - "/etc/bashrc"
      when: not audit_only and not default_user_umask_check.remediation_status

     # 4.5.3.3 Ensure default user umask is configured | Remediation
    - name: 4.5.3.3 Ensure default user umask is configured | Remediation
      lineinfile:
        path: "{{ item }}"
        regexp: '^(umask)[\s]{1,}0027'
        line: 'umask 0027'
        state: present
      loop:
      - "/etc/profile"
      - "/etc/bashrc"
      when: not audit_only and not default_user_umask_check.remediation_status
    
    # 4.5.3.3 Ensure default user umask is configured | Remediation
    - name: 4.5.3.3 Ensure default user umask is configured | Remediation
      replace:
        path: "/etc/login.defs"
        regexp: '^[#]{0,}(UMASK)[\s]{1,}[\d]{1,}.+'
        replace: ''
      when: not audit_only and not default_user_umask_check.remediation_status

     # 4.5.3.3 Ensure default user umask is configured | Remediation
    - name: 4.5.3.3 Ensure default user umask is configured | Remediation
      lineinfile:
        path: "/etc/login.defs"
        regexp: '^[#]{0,}(UMASK)[\s]{1,}[\d]{1,}.+'
        line: 'UMASK 0027'
        state: present
      when: not audit_only and not default_user_umask_check.remediation_status
    tags:
    - "server_level_2"
    - "workstation_level_2"
    when: "'server_level_2' in levels or 'workstation_level_2' in levels"